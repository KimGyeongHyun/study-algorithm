스택
    LIFO, 입구와 출구가 동일

큐
    FIFO, 입구와 출구가 모두 뚫려 있음

파이썬에서는 리스트보단 deque 를 이용하는 것이 시간복잡도상 이득

재귀 함수
    자기 자신을 다시 호출하는 함수  (팩토리얼, 유클리드 호제법 등)
    maximum recursion depth 가 정해져 있음
    컴퓨터 시스템상 스택 프레임에 반복적으로 쌓이게 되므로 이를 막기 위해 존재

    이해하기 어려운 형태의 코드가 될 수 있음
    반복문과 비교하여 더 좋은 것을 고르기

DFS
    깊이 우선 탐색 (Depth)
    스택 자료구조나 재귀 함수로 구현
    1. 탐색 시작 노드를 스택에 삽입, 방문 처리
    2. 스택 최상단 노드에 방문하지 않은 인접한 노드 있으면
        그 노드를 스택에 넣고 방문 처리
        방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드 꺼냄
    3. 2번 과정을 수행할 수 없을 때까지 반복

    기본적인 방문 기준은 번호가 낮은 인접 노드 순서
    (상황에 따라 달라질 수 있음)

BFS
    너비 우선 탐색 (Breadth)
    큐 자료구조
    1. 탐색 시작 노드를 큐에 삽입, 방문 처리
    2. 큐에서 노드를 꺼낸 뒤
        해당 노드의 인접 노드 중 방문하지 않은 노드를 모두 큐에 삽입, 방문 처리
    3. 2번 과정을 수행할 수 없을 때까지 반복