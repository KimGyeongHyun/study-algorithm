분리 집합

서로 중복되지 않는 부분 집합들로 나누어진 원소들에 대한 정보를
저장하고 조작하는 자료구조

구현하는 데 제일 효율적인 건 트리구조
key: 본인, value: 부모 노드 의 리스트를 활용
루트 노드는 본인 노드를 부모 노드로 가짐

find(node) : 루트 노드를 리턴
union(u, v) : 각 원소가 속한 트리의 루트 노드를 find() 로 찾아
    루트 노드가 다르다면 v의 부모 노드를 u의 루트 노드로 바꿈

트리의 높이에 따라 시간 복잡도가 결정되는데
트리 구조가 연결 리스트 형태라면 최악의 시간복잡도 O(n) 이 된다
이를 방지하기 위해 find 메소드에서 노드를 돌 때마다
모든 노드의 부모 노드를 루트 노드로 설정한다
(트리 구조를 바꾸는 것이 아니기 때문에 rank 값은 변하지 않는다)

또한 트리끼리 union 연산 시 높이가 낮은 트리를 높이가 높은 트리에 붙여야 
트리가 편향 없이 구성된다
높이가 낮은 트리의 루트 노드의 부모 노드를 
높이가 높은 트리의 루트 노드로 설정하므로
두 트리의 높이 차이가 없다면 트리의 높이가 +1 되지만
높이 차이가 난다면 트리의 높이는 변화 없다

노드 수가 많고 복잡해질 수록 시간 차이가 많이 난다